<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:SharpPropoPlus.Views"
    xmlns:viewModels="clr-namespace:SharpPropoPlus.ViewModels"
    xmlns:controls="clr-namespace:SharpPropoPlus.Controls"
    x:Class="SharpPropoPlus.Views.AudioConfig"
    mc:Ignorable="d" 
    d:DesignHeight="400" 
    d:DesignWidth="600"
    d:DataContext="{d:DesignInstance viewModels:AudioConfigViewModel, d:IsDesignTimeCreatable=False}">

    <UserControl.Resources>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockLightStyleKey}"/>
    </UserControl.Resources>
    
    <!--<UserControl.DataContext>
        <viewModels:AudioConfigViewModel></viewModels:AudioConfigViewModel>
    </UserControl.DataContext>-->

    <StackPanel>

        <StackPanel Orientation="Vertical"  Margin="0 0 0 8"  >
            <!--<Border HorizontalAlignment="Stretch" SnapsToDevicePixels="True" BorderThickness="0 0 0 1" BorderBrush="#f0f0f0"/>-->
            <TextBlock Style="{StaticResource TextBlockHeaderStyleKey}" Text="Input Device" />

            <ComboBox Margin="0 8" HorizontalAlignment="Left" Grid.Row="1" DisplayMemberPath="DeviceName" ItemsSource="{Binding AudioEndPointCollection, Mode=OneWay}" SelectedItem="{Binding SelectedAudioEndPoint, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                <!--<ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding DeviceName}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>-->
            </ComboBox>
        </StackPanel>

        <Border Style="{StaticResource BorderSeparator}"/>

        <Grid Margin="0 8" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock Style="{StaticResource TextBlockHeaderStyleKey}" Text="Bitrate" />

            <ComboBox Margin="0 8" HorizontalAlignment="Left" Grid.Row="1" SelectedIndex="0" ItemsSource="{Binding BitrateCollection, Mode=OneWay}" SelectedItem="{Binding SelectedBitrateItem, Mode=TwoWay}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource AudioBitrateValueConverter}, Mode=OneWay}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>

        <Border Style="{StaticResource BorderSeparator}"/>

        <Grid Margin="0 8" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock Style="{StaticResource TextBlockHeaderStyleKey}" Text="Source Channel" />

            <ComboBox Margin="0 8" HorizontalAlignment="Left" Grid.Row="1" SelectedIndex="0" ItemsSource="{Binding ChannelCollection, Mode=OneWay}" SelectedItem="{Binding SelectedChannelItem, Mode=TwoWay}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource AudioChannelValueConverter}, Mode=OneWay}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">

                        <Setter Property="IsEnabled" Value="True"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedAudioEndPoint.Channels}" Value="1">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>

                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
        </Grid>

        <Border Style="{StaticResource BorderSeparator}"/>
        
        <Grid Margin="0 8" >
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock >
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockHeaderStyleKey}">
                        <Setter Property="Text" Value="Audio Levels"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedAudioEndPoint.Channels}" Value="1">
                                <Setter Property="Text" Value="Audio Level"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <StackPanel Grid.Row="1">
                <Grid Margin="0 2">
                    <controls:StripIndicator Height="16" Value="{Binding LeftChannelPeak, Mode=OneWay}" Maximum="100" Minimum="0" BorderThickness="1" >
                        <controls:StripIndicator.Resources>
                            <Style TargetType="{x:Type controls:StripIndicator}" BasedOn="{StaticResource {x:Type controls:StripIndicator}}">
                                <!--<Style.Triggers>
                                    <DataTrigger Binding="{Binding Muted}" Value="true">
                                        <Setter Property="BorderBrush" Value="Red"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>-->
                            </Style>
                        </controls:StripIndicator.Resources>
                    </controls:StripIndicator>
                    <TextBlock Panel.ZIndex="0" Margin="8 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left">
                        <TextBlock.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="Left"/>


                                <Style.Triggers>
                                    <!--<DataTrigger Binding="{Binding Muted}" Value="true">
                                        <Setter Property="Text" Value="Left (Muted)"></Setter>
                                    </DataTrigger>-->

                                    <DataTrigger Binding="{Binding SelectedAudioEndPoint.Channels}" Value="1">
                                        <Setter Property="Text" Value="Mono"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Resources>
                    </TextBlock>

                    <TextBlock Panel.ZIndex="0" Margin="0 0 8 0" Text="{Binding LeftChannelPeak, Mode=OneWay, StringFormat=\{0\}%}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                </Grid>

                <Grid Margin="0 2">
                    <Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility" Value="Visible"/>

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedAudioEndPoint.Channels}" Value="1">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>
                    <controls:StripIndicator Height="16" Value="{Binding RightChannelPeak, Mode=OneWay, TargetNullValue=0}" Maximum="100" Minimum="0" BorderThickness="1" >
                        <controls:StripIndicator.Resources>
                            <Style TargetType="{x:Type controls:StripIndicator}" BasedOn="{StaticResource {x:Type controls:StripIndicator}}">
                                <!--<Style.Triggers>
                                    <DataTrigger Binding="{Binding Muted}" Value="true">
                                        <Setter Property="BorderBrush" Value="Red"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>-->
                            </Style>
                        </controls:StripIndicator.Resources>
                    </controls:StripIndicator>
                    <TextBlock Panel.ZIndex="0" Margin="8 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left">
                        <TextBlock.Resources>
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}" >
                                <Setter Property="Text" Value="Right"/>
                                <!--<Style.Triggers>
                                    <DataTrigger Binding="{Binding Muted}" Value="true">
                                        <Setter Property="Text" Value="Right (Muted)"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>-->
                            </Style>
                        </TextBlock.Resources>
                    </TextBlock>
                    <TextBlock Panel.ZIndex="0" Margin="0 0 8 0" Text="{Binding RightChannelPeak, TargetNullValue='0%', Mode=OneWay, StringFormat=\{0\}%}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                </Grid>

            </StackPanel>



            <!--<ComboBox MinWidth="200" HorizontalAlignment="Left" Grid.Row="1" SelectedIndex="0" ItemsSource="{Binding ChannelCollection, Mode=OneWay}" SelectedItem="{Binding SelectedChannelItem, Mode=TwoWay}" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Mode=OneWay}">
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>-->
        </Grid>
    </StackPanel>
</UserControl>
