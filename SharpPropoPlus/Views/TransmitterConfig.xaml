<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:viewModels="clr-namespace:SharpPropoPlus.ViewModels"
    xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
    xmlns:controls="clr-namespace:SharpPropoPlus.Controls"
    xmlns:types="clr-namespace:SharpPropoPlus.Contracts.Enums;assembly=SharpPropoPlus.Contracts"
    x:Class="SharpPropoPlus.Views.TransmitterConfig"
    mc:Ignorable="d" 
    d:DesignHeight="400" 
    d:DesignWidth="600"
    d:DataContext="{d:DesignInstance viewModels:TransmitterConfigViewModel, d:IsDesignTimeCreatable=False}">


    <UserControl.Resources>

        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockLightStyleKey}"/>


        <CollectionViewSource 
            x:Key="DecoderCollection"
            Source="{Binding DecoderCollection}">
            
            <!-- Grouping -->
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Metadata.TransmitterType"  />
            </CollectionViewSource.GroupDescriptions>

            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription Direction="Ascending" PropertyName="Metadata.Name"  />
            </CollectionViewSource.SortDescriptions>

        </CollectionViewSource>

    </UserControl.Resources>


    <StackPanel>

        <controls:ControlContainer Title="信号解码器" TitleStringFormat="{x:Null}" Description="选择匹配你的遥控器所用编码的信号解码器">
            <ComboBox Margin="0" 
                      VerticalAlignment="Center" 
                      HorizontalAlignment="Right" 
                      DisplayMemberPath="Metadata.Name" 
                      MaxDropDownHeight="8" 
                      ItemsSource="{Binding Source={StaticResource DecoderCollection}}" 
                      SelectedItem="{Binding SelectedDecoder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >

                <ComboBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="GroupItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GroupItem" >
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <Grid Grid.Row="0" Margin="0" Background="#01000000" Opacity="0.75" >
                                                    <Border VerticalAlignment="Stretch" SnapsToDevicePixels="True" BorderBrush="{StaticResource LightBorderColorBrush}" BorderThickness="0 0 0 1" HorizontalAlignment="Stretch" Margin="8 0" Padding="8 6 40 6">
                                                        <ContentPresenter x:Name="ContentControl" Content="{Binding Name, Mode=OneWay, Converter={StaticResource DescriptionAttributeValueConverter}}" TextBlock.FontWeight="Light" TextBlock.FontSize="11" TextBlock.FontFamily="pack://application:,,,/Fonts/#Montserrat Light" />
                                                    </Border>
                                                </Grid>
                                                <ItemsPresenter Grid.Row="1"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ComboBox.GroupStyle>
            </ComboBox>
        </controls:ControlContainer>

        <controls:ControlContainer Title="配置解码器" TitleStringFormat="{x:Null}" Description="详细修改解码器的相关设定，设定脉冲间隔时间等">
            <controls:ControlContainer.Style>
                <Style TargetType="{x:Type controls:ControlContainer}"  BasedOn="{StaticResource {x:Type controls:ControlContainer}}" >
                    <Setter Property="HasBorder" Value="True"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}"/>
                                <Condition Binding="{Binding ShowSettings}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="HasBorder" Value="False"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </Style.Triggers>
                </Style>
            </controls:ControlContainer.Style>

            <ToggleButton IsChecked="{Binding ShowSettings, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                          HorizontalAlignment="Right" 
                          VerticalAlignment="Center" 
                          Height="20" >
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource AnimatedSwitch}" >
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="IsChecked" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Pcm}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="IsChecked" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </controls:ControlContainer>

        <controls:ControlContainer Title="{x:Null}">

            <controls:ControlContainer.Style>
                <Style TargetType="{x:Type controls:ControlContainer}"  BasedOn="{StaticResource {x:Type controls:ControlContainer}}" >
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}"/>
                                <Condition Binding="{Binding ShowSettings}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                    </Style.Triggers>
                </Style>
            </controls:ControlContainer.Style>

            <controls:ControlContainer.Description>

                <Grid Margin="8 8 8 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="脉冲长度 (最小)：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="0" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmMinPulseWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>

                    <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}">
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmMinPulseWidth, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="脉冲长度 (最大)：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="1" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmMaxPulseWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>


                    <TextBlock Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}" >
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmMaxPulseWidth, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="数据包分离器：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="2" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmTrig, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>

                    <TextBlock Grid.Column="2" Grid.Row="2" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}" >
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmTrig, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="通道分离器：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="3" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmSeparator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>
                    
                    <TextBlock Grid.Column="2" Grid.Row="3" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}" >
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmSeparator, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="容差：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="4" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmGlitch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>
                    
                    <TextBlock Grid.Column="2" Grid.Row="4" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}" >
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmGlitch, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>

                    <TextBlock Grid.Column="0" Grid.Row="5" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource TextBlockDefaultStyleKey}" Text="抖动：" />
                    <controls:NumericUpDown Grid.Column="1" Grid.Row="5" Margin="8 2 4 2" MinValue="0.0" MaxValue="1000" Increment="0.01" MinWidth="100">
                        <controls:NumericUpDown.Style>
                            <Style TargetType="{x:Type controls:NumericUpDown}" BasedOn="{StaticResource {x:Type controls:NumericUpDown}}" >
                                <Setter Property="Value" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Value" Value="{Binding SelectedDecoder.Value.PpmJitter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </controls:NumericUpDown.Style>
                    </controls:NumericUpDown>
                    
                    <TextBlock Grid.Column="2" Grid.Row="5" VerticalAlignment="Center" Style="{StaticResource TextBlockLightStyleKey}" >
                    <Run Text="("/><Run>
                        <Run.Style>
                            <Style TargetType="{x:Type Run}">
                                <Setter Property="Text" Value="{x:Null}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding TransmitterType, Mode=OneWay}" Value="{x:Static types:TransmitterType.Ppm}">
                                        <Setter Property="Text" Value="{Binding SelectedDecoder.Value.PpmJitter, Converter={StaticResource MathValueConverter}, ConverterParameter=@VALUE/192, StringFormat='{}{0:0.###}'}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run><Run FontSize="10" Text="ms"/><Run Text=")"/>
                    </TextBlock>
                </Grid>
            </controls:ControlContainer.Description>
        </controls:ControlContainer>

        <!--<controls:ControlContainer Title="{Binding RawChannels, TargetNullValue=0}" TitleStringFormat="R/C Channels ({0})" >
            <controls:ControlContainer.Description>
                <controls:ChannelMonitor Margin="0 2 0 0" BarWidth="12" HorizontalAlignment="Left" Height="60" Data="{Binding RawChannelData}" Background="Crimson"/>
            </controls:ControlContainer.Description>
        </controls:ControlContainer>-->

        <!--<Grid  >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Column="0" 
                       Grid.Row="0" 
                       Margin="0" 
                       Style="{StaticResource TextBlockHeaderStyleKey}" 
                       Text="{Binding RawChannels, StringFormat='R/C Channels ({0})', TargetNullValue=0}" />

            <TextBlock Grid.Column="0"
                       Grid.Row="1" 
                       Margin="0 2 0 0" 
                       Style="{StaticResource TextBlockLightStyleKey}" 
                       Text="" Visibility="Collapsed"  />
        </Grid>

        <Border Style="{StaticResource BorderSeparator}"/>-->

    </StackPanel>
</UserControl>
